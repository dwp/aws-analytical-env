jobs:
  - name: mirror-git-repo-uc-lab-repo-preprod
    plan:
      - get: aws-uc-lab-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-uc-lab-repo
          inputs:
            - name: aws-uc-lab-repo
          params:
            S3_ROOT: component/uc_repos/aws-uc-lab/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-opsmi-ops-mi-repo-preprod
    plan:
      - get: opsmi-chs-ops-mi-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: opsmi-chs-ops-mi-repo
          inputs:
            - name: opsmi-chs-ops-mi-repo
          params:
            S3_ROOT: component/uc_repos/opsmi-chs-ops-mi-repo/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-payment-timelines-preprod
    plan:
      - get: aws-payment-timelines-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-payment-timelines-repo
          inputs:
            - name: aws-payment-timelines-repo
          params:
            S3_ROOT: component/uc_repos/aws-payment-timelines/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-cbol-data-preprod
    plan:
      - get: aws-cbol-data-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-cbol-data-repo
          inputs:
            - name: aws-cbol-data-repo
          params:
            S3_ROOT: component/uc_repos/aws-cbol-data/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci


  - name: mirror-git-repo-aws-user-data-migration-preprod
    plan:
      - get: aws-user-data-migration-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-user-data-migration-repo
          inputs:
            - name: aws-user-data-migration-repo
          params:
            S3_ROOT: component/uc_repos/aws-user-data-migration/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-claimant-history-preprod
    plan:
      - get: aws-claimant-history-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-claimant-history-repo
          inputs:
            - name: aws-claimant-history-repo
          params:
            S3_ROOT: component/uc_repos/aws-claimant-history/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-data-exploration-preprod
    plan:
      - get: aws-data-exploration-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-data-exploration-repo
          inputs:
            - name: aws-data-exploration-repo
          params:
            S3_ROOT: component/uc_repos/aws-data-exploration/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-azkaban-dev-preprod
    plan:
      - get: azkaban-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: azkaban-dev-repo
          inputs:
            - name: azkaban-dev-repo
          params:
            S3_ROOT: component/uc_repos/azkaban-dev/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-auditlog-preprod
    plan:
      - get: aws-auditlog-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-auditlog-repo
          inputs:
            - name: aws-auditlog-repo
          params:
            S3_ROOT: component/uc_repos/aws-auditlog/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-auditlog-dev-preprod
    plan:
      - get: aws-auditlog-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-auditlog-dev-repo
          inputs:
            - name: aws-auditlog-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-auditlog/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-claimant-history-dev-preprod
    plan:
      - get: aws-claimant-history-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-claimant-history-dev-repo
          inputs:
            - name: aws-claimant-history-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-claimant-history/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-uc-channel-preprod
    plan:
      - get: aws-uc-channel-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-uc-channel-repo
          inputs:
            - name: aws-uc-channel-repo
          params:
            S3_ROOT: component/uc_repos/aws-uc-channel/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-uc-channel-dev-preprod
    plan:
      - get: aws-uc-channel-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-uc-channel-dev-repo
          inputs:
            - name: aws-uc-channel-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-uc-channel/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-impact-measures-preprod
    plan:
      - get: impact-measures-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: impact-measures-repo
          inputs:
            - name: impact-measures-repo
          params:
            S3_ROOT: component/uc_repos/impact-measures/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-impact-measures-dev-preprod
    plan:
      - get: impact-measures-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: impact-measures-dev-repo
          inputs:
            - name: impact-measures-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/impact-measures/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-how-many-preprod
    plan:
      - get: aws-how-many-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-how-many-repo
          inputs:
            - name: aws-how-many-repo
          params:
            S3_ROOT: component/uc_repos/aws-how-many/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-how-many-dev-preprod
    plan:
      - get: aws-how-many-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-how-many-dev-repo
          inputs:
            - name: aws-how-many-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-how-many/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-dwx-housing-preprod
    plan:
      - get: aws-dwx-housing-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-dwx-housing-repo
          inputs:
            - name: aws-dwx-housing-repo
          params:
            S3_ROOT: component/uc_repos/aws-dwx-housing/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-nat-stats-preprod
    plan:
      - get: aws-nat-stats
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-nat-stats
          inputs:
            - name: aws-nat-stats
          params:
            S3_ROOT: component/uc_repos/aws-nat-stats
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-dwx-sas-extracts-preprod
    plan:
      - get: aws-dwx-sas-extracts-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-dwx-sas-extracts-repo
          inputs:
            - name: aws-dwx-sas-extracts-repo
          params:
            S3_ROOT: component/uc_repos/aws-dwx-sas-extracts
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            
  - name: mirror-git-repo-aws-pdm-to-rtg-exports-preprod
    plan:
      - get: aws-pdm-to-rtg-exports
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-pdm-to-rtg-exports
          inputs:
            - name: aws-pdm-to-rtg-exports
          params:
            S3_ROOT: component/uc_repos/aws-pdm-to-rtg-exports
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-aws-htme-to-rtg-exports-preprod
    plan:
      - get: aws-htme-to-rtg-exports
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-htme-to-rtg-exports
          inputs:
            - name: aws-htme-to-rtg-exports
          params:
            S3_ROOT: component/uc_repos/aws-htme-to-rtg-exports
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci


  - name: mirror-git-repo-aws-one-service-preprod
    plan:
      - get: aws-one-service-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-one-service-repo
          inputs:
            - name: aws-one-service-repo
          params:
            S3_ROOT: component/uc_repos/aws-one-service
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-opsmi-opti-azkaban-preprod
    plan:
      - get: opsmi-opti-azkaban-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: opsmi-opti-azkaban-repo
          inputs:
            - name: opsmi-opti-azkaban-repo
          params:
            S3_ROOT: component/uc_repos/opti-azkaban
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-opsmi-opti-azkaban-dev-preprod
    plan:
      - get: opsmi-opti-azkaban-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: opsmi-opti-azkaban-dev-repo
          inputs:
            - name: opsmi-opti-azkaban-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/opti-azkaban
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-ucfs-universe-repo-preprod
    plan:
      - get: time-6am-trigger
        trigger: true
      - get: ucfs-universe-repo
        trigger: false
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: ucfs-universe-repo
          inputs:
            - name: ucfs-universe-repo
          params:
            S3_ROOT: component/uc_repos/ucfs-universe/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-ers-ucds-reporting-preprod
    plan:
      - get: ers-ucds-reporting
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: ers-ucds-reporting
          inputs:
            - name: ers-ucds-reporting
          params:
            S3_ROOT: component/uc_repos/ers-ucds-reporting/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-ers-ucds-reporting-dev-preprod
    plan:
      - get: ers-ucds-reporting-dev
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: ers-ucds-reporting-dev
          inputs:
            - name: ers-ucds-reporting-dev
          params:
            S3_ROOT: component/uc_repos/dev/ers-ucds-reporting/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-transform-json-repo-preprod
    plan:
      - get: aws-transform-json-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-transform-json-repo
          inputs:
            - name: aws-transform-json-repo
          params:
            S3_ROOT: component/uc_repos/aws-transform-json/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-vulnerable-journal-messages-preprod
    plan:
      - get: vulnerable-journal-messages-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: vulnerable-journal-messages-repo
          inputs:
            - name: vulnerable-journal-messages-repo
          params:
            S3_ROOT: component/uc_repos/vulnerable_journal_messages/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: mirror-git-repo-vulnerable-journal-messages-dev-preprod
    plan:
      - get: vulnerable-journal-messages-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: vulnerable-journal-messages-dev-repo
          inputs:
            - name: vulnerable-journal-messages-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/vulnerable_journal_messages/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
