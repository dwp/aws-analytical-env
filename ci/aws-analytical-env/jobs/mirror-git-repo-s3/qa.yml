jobs:
  - name: mirror-git-repo-uc-lab-repo-qa
    plan:
      - get: aws-uc-lab-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-uc-lab-repo
          inputs:
            - name: aws-uc-lab-repo
          params:
            S3_ROOT: component/uc_repos/aws-uc-lab/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-opsmi-ops-mi-repo-qa
    plan:
      - get: opsmi-chs-ops-mi-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: opsmi-chs-ops-mi-repo
          inputs:
            - name: opsmi-chs-ops-mi-repo
          params:
            S3_ROOT: component/uc_repos/opsmi-chs-ops-mi-repo/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-payment-timelines-qa
    plan:
      - get: aws-payment-timelines-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-payment-timelines-repo
          inputs:
            - name: aws-payment-timelines-repo
          params:
            S3_ROOT: component/uc_repos/aws-payment-timelines/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-cbol-data-qa
    plan:
      - get: aws-cbol-data-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-cbol-data-repo
          inputs:
            - name: aws-cbol-data-repo
          params:
            S3_ROOT: component/uc_repos/aws-cbol-data/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-user-data-migration-qa
    plan:
      - get: aws-user-data-migration-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-user-data-migration-repo
          inputs:
            - name: aws-user-data-migration-repo
          params:
            S3_ROOT: component/uc_repos/aws-user-data-migration/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-claimant-history-qa
    plan:
      - get: aws-claimant-history-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-claimant-history-repo
          inputs:
            - name: aws-claimant-history-repo
          params:
            S3_ROOT: component/uc_repos/aws-claimant-history/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-data-exploration-qa
    plan:
      - get: aws-data-exploration-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-data-exploration-repo
          inputs:
            - name: aws-data-exploration-repo
          params:
            S3_ROOT: component/uc_repos/aws-data-exploration/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-azkaban-dev-qa
    plan:
      - get: azkaban-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: azkaban-dev-repo
          inputs:
            - name: azkaban-dev-repo
          params:
            S3_ROOT: component/uc_repos/azkaban-dev/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-auditlog-qa
    plan:
      - get: aws-auditlog-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-auditlog-repo
          inputs:
            - name: aws-auditlog-repo
          params:
            S3_ROOT: component/uc_repos/aws-auditlog/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-auditlog-dev-qa
    plan:
      - get: aws-auditlog-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-auditlog-dev-repo
          inputs:
            - name: aws-auditlog-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-auditlog/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-claimant-history-dev-qa
    plan:
      - get: aws-claimant-history-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-claimant-history-dev-repo
          inputs:
            - name: aws-claimant-history-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-claimant-history/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-uc-channel-qa
    plan:
      - get: aws-uc-channel-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-uc-channel-repo
          inputs:
            - name: aws-uc-channel-repo
          params:
            S3_ROOT: component/uc_repos/aws-uc-channel/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-uc-channel-dev-qa
    plan:
      - get: aws-uc-channel-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-uc-channel-dev-repo
          inputs:
            - name: aws-uc-channel-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-uc-channel/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-impact-measures-qa
    plan:
      - get: impact-measures-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: impact-measures-repo
          inputs:
            - name: impact-measures-repo
          params:
            S3_ROOT: component/uc_repos/impact-measures/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-impact-measures-dev-qa
    plan:
      - get: impact-measures-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: impact-measures-dev-repo
          inputs:
            - name: impact-measures-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/impact-measures/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-how-many-qa
    plan:
      - get: aws-how-many-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-how-many-repo
          inputs:
            - name: aws-how-many-repo
          params:
            S3_ROOT: component/uc_repos/aws-how-many/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-how-many-dev-qa
    plan:
      - get: aws-how-many-dev-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-how-many-dev-repo
          inputs:
            - name: aws-how-many-dev-repo
          params:
            S3_ROOT: component/uc_repos/dev/aws-how-many/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-dwx-housing-qa
    plan:
      - get: aws-dwx-housing-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-dwx-housing-repo
          inputs:
            - name: aws-dwx-housing-repo
          params:
            S3_ROOT: component/uc_repos/aws-dwx-housing/
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-rtg-pdm-exports-qa
    plan:
      - get: aws-rtg-pdm-exports
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-rtg-pdm-exports
          inputs:
            - name: aws-rtg-pdm-exports
          params:
            S3_ROOT: component/uc_repos/aws-rtg-pdm-exports
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: mirror-git-repo-aws-one-service-qa
    plan:
      - get: aws-one-service-repo
        trigger: true
      - get: aws-common-infrastructure
        trigger: false
      - .: (( inject meta.plan.terraform-output-common ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta.plan.mirror-git-repo ))
        config:
          run:
            dir: aws-one-service-repo
          inputs:
            - name: aws-one-service-repo
          params:
            S3_ROOT: component/uc_repos/aws-one-service
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
